# This Python 3 environment comes with many helpful analytics libraries installed
# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python
# For example, here's several helpful packages to load

import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)

# Input data files are available in the read-only "../input/" directory
# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory

import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))

# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using "Save & Run All" 
# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session
Aim
In this notebook I have used a library called pytrends.
By using this library I ranked top 10 regions which searched for the word "Machine Learning"
I have analysed the amount of searches for the word "Machine Learning" from late 2017 till today.
pip install pytrends
Collecting pytrends
  Downloading pytrends-4.8.0.tar.gz (19 kB)
  Preparing metadata (setup.py) ... done
Requirement already satisfied: requests>=2.0 in /opt/conda/lib/python3.7/site-packages (from pytrends) (2.28.1)
Requirement already satisfied: pandas>=0.25 in /opt/conda/lib/python3.7/site-packages (from pytrends) (1.3.5)
Requirement already satisfied: lxml in /opt/conda/lib/python3.7/site-packages (from pytrends) (4.9.1)
Requirement already satisfied: python-dateutil>=2.7.3 in /opt/conda/lib/python3.7/site-packages (from pandas>=0.25->pytrends) (2.8.2)
Requirement already satisfied: pytz>=2017.3 in /opt/conda/lib/python3.7/site-packages (from pandas>=0.25->pytrends) (2022.1)
Requirement already satisfied: numpy>=1.17.3 in /opt/conda/lib/python3.7/site-packages (from pandas>=0.25->pytrends) (1.21.6)
Requirement already satisfied: charset-normalizer<3,>=2 in /opt/conda/lib/python3.7/site-packages (from requests>=2.0->pytrends) (2.1.0)
Requirement already satisfied: urllib3<1.27,>=1.21.1 in /opt/conda/lib/python3.7/site-packages (from requests>=2.0->pytrends) (1.26.12)
Requirement already satisfied: certifi>=2017.4.17 in /opt/conda/lib/python3.7/site-packages (from requests>=2.0->pytrends) (2022.6.15.2)
Requirement already satisfied: idna<4,>=2.5 in /opt/conda/lib/python3.7/site-packages (from requests>=2.0->pytrends) (3.3)
Requirement already satisfied: six>=1.5 in /opt/conda/lib/python3.7/site-packages (from python-dateutil>=2.7.3->pandas>=0.25->pytrends) (1.15.0)
Building wheels for collected packages: pytrends
  Building wheel for pytrends (setup.py) ... done
  Created wheel for pytrends: filename=pytrends-4.8.0-py3-none-any.whl size=16126 sha256=d7d57b3e21b4466c1dd9a1d688a26f7194a6aa63e84ba2c30aed52ebe5e0b179
  Stored in directory: /root/.cache/pip/wheels/07/6f/5c/8174f98dec1bfbc7d5da4092854afcbcff4b26c3d9b66b5183
Successfully built pytrends
Installing collected packages: pytrends
Successfully installed pytrends-4.8.0
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
Note: you may need to restart the kernel to use updated packages.
from pytrends.request import TrendReq
import matplotlib.pyplot as plt
trends = TrendReq()
trends.build_payload(kw_list=["Machine Learning"])
data = trends.interest_by_region() #sorting by region
data = data.sort_values(by="Machine Learning", ascending=False)
data = data.head(10) #Top 10
print(data)
             Machine Learning
geoName                      
China                     100
Singapore                  45
Ethiopia                   43
St. Helena                 34
India                      32
Hong Kong                  24
Pakistan                   24
Tunisia                    23
South Korea                22
Nepal                      21
data.reset_index().plot(x="geoName", y="Machine Learning", 
                        figsize=(20,15), kind="bar")
plt.style.use('fivethirtyeight')
plt.show()

data = TrendReq(hl='en-US', tz=360)
data.build_payload(kw_list=['Machine Learning'])
data = data.interest_over_time()
fig, ax = plt.subplots(figsize=(30, 20))
data['Machine Learning'].plot()
plt.style.use('fivethirtyeight')
plt.title('Total Google Searches for Machine Learning', fontweight='bold')
plt.xlabel('Year')

plt.ylabel('Total Count')
plt.show()

 
Conlusion
1) Searches fro Machin Learning started increasing from 2018 & it is rising till date.
2) If we observe top 10 countries, then China has searched most for Machine Learning whereas Nepal is on the 10th position.
3) We can use these kind of analysis for SEO keywords generation that will lead more audience to your site.
 
